syntax = "proto3";
package GamePto;

enum DiceValueEnum{
	Sword = 0;//剑
	Bow = 1;//远程
	Magic = 2;//魔法
	Miss = 3;
}

message UserInfo{
	string nick = 0;
	int32 power = 1;
	int32 uid = 2;
}

message Card{
	int32 id = 0;
	int32 cardId = 1;
	int32 attack = 2;
	int32 health = 3;
	int32 fee = 4;//战场上的卡用不到，手牌会用到
	int32 uid = 5;
	int32 blockX = 6;
	int32 blockY = 7;
	bool allowAtk = 8;
	bool allowMove = 9;
	repeated int32 buffArr = 10;
}

message MapData{
	repeated Card eventCards = 0;
	repeated Card entityCards = 1;
}

//===================Client message===================

//准备开始(包含更换卡牌数据)
message C_PREPARE_TO_START{
	int32 cmd = 1[default = 200]; 
	int32 scmd = 2[default = 1];
	repeated int32 replaceCardIndexes = 3;
}

//请求结束回合
message C_END_ROUND{
	int32 cmd = 1[default = 200]; 
	int32 scmd = 2[default = 2];
}

//弃牌
message C_DISCARD{
	int32 cmd = 1[default = 200]; 
	int32 scmd = 2[default = 3];
	int32 cardIndex = 3;
}

//使用卡牌
message C_USE_CARD{
	int32 cmd = 1[default = 200]; 
	int32 scmd = 2[default = 4];
	int32 cardIndex = 3;
	//用于保存使用卡牌的一些数据
	//当卡牌为建筑、单位卡时，头两个数据为放置位置数据，接着的数据为战吼目标位置等
	//当卡牌是法术卡牌时,则接下来的数据可能为目标
	//对于一些法术卡或者事件卡,data的数据可能是空的
	repeated int32 dataArr = 4;
}

//请求移动
message C_MOVE{
	int32 cmd = 1[default = 200]; 
	int32 scmd = 2[default = 5];
	int32 sourceX = 3;
	int32 sourceY = 4;
	int32 targetX = 5;
	int32 targetY = 6;	
}

//请求攻击
message C_ATTACK{
	int32 cmd = 1[default = 200]; 
	int32 scmd = 2[default = 6];
	int32 sourceX = 3;
	int32 sourceY = 4;
	int32 targetX = 5;
	int32 targetY = 6;	
}

//===================Server message===================

//服务端异常 关闭场景
message S_SERVER_ERROR{
	int32 cmd = 1[default = 200]; 
	int32 scmd = 2[default = 10000];
	string message = 3;
}

//初始化游戏
message S_INIT_GAME{
	int32 cmd = 1[default = 200]; 
	int32 scmd = 2[default = 10001];
	repeated UserInfo users = 3;
}

//开始游戏
message S_GAME_START{
	int32 cmd = 1[default = 200]; 
	int32 scmd = 2[default = 10002];
	int32 firstUid = 3;
	repeated Card cards = 4;
	MapData mapData = 5;
	int64 replaceEndTime = 6;
}

//替换手牌
message S_REPLACE_CARDS{
	int32 cmd = 1[default = 200]; 
	int32 scmd = 2[default = 10003];
	repeated Card cards = 3;
	repeated int32 replaceCardIndexes = 4;
	int32 uid = 5;
}

//回合开始
message S_ROUND_START_EVENT{
	int32 cmd = 1[default = 200]; 
	int32 scmd = 2[default = 10004];
	int32 uid = 3;
	int32 atkTimes = 4;
	int32 atkTimesLimit = 5;
	int32 moveTimes = 6;
	int32 moveTimesLimit = 7;
}

//回合结束
message S_ROUND_END_EVENT{
	int32 cmd = 1[default = 200]; 
	int32 scmd = 2[default = 10005];
	int32 uid = 3;
}

//抽卡疲劳
message S_DRAW_CARDS{
	int32 cmd = 1[default = 200]; 
	int32 scmd = 2[default = 10006];
	repeated Card inHandCards = 3;
	int32 inHandCardCount = 4;
	repeated Card discards = 5;
	int32 discardsCount = 6;
	repeated int32 damages = 7;
	int32 uid = 8;
	int32 cardPoolNum = 9;
	int32 deadPoolNum = 10;
}

//费用协议
message S_FEE_INFO{
	int32 cmd = 1[default = 200]; 
	int32 scmd = 2[default = 10007];
	int32 fee = 3;
	int32 maxFee = 4;
	int32 uid = 5;
}

//弃牌
message S_DISCARD{
	int32 cmd = 1[default = 200]; 
	int32 scmd = 2[default = 10008];
	bool isSuccess = 3;
	int32 cardIndex = 4;
	int32 fee = 5;
	int32 feeMax = 6;
	int32 uid = 7;
}

//使用卡牌
message S_USE_CARD{
	int32 cmd = 1[default = 200]; 
	int32 scmd = 2[default = 10009];
	bool isSuccess = 3;
	int32 fee = 5;
	int32 feeMax = 6;	
	int32 uid = 7;
	int32 cardIndex = 8;
	Card card = 9;
}

//下发回合结束时间
message S_ROUND_END_TIME{
	int32 cmd = 1[default = 200]; 
	int32 scmd = 2[default = 10010];
	int64 endTime = 3;
	int32 uid = 4;
}

//地图数据
message S_MAP_DATA{
	int32 cmd = 1[default = 200]; 
	int32 scmd = 2[default = 10011];
	MapData mapData = 3;
}

//请求移动返回
message S_MOVE{
	int32 cmd = 1[default = 200]; 
	int32 scmd = 2[default = 10012];
	int32 sourceX = 3;
	int32 sourceY = 4;
	int32 targetX = 5;
	int32 targetY = 6;	
	bool allowMove = 7;
	int32 uid = 8;
}

//请求攻击返回
message S_ATTACK{
	int32 cmd = 1[default = 200]; 
	int32 scmd = 2[default = 10013];
	int32 sourceX = 3;
	int32 sourceY = 4;
	int32 targetX = 5;
	int32 targetY = 6;
	int32 damage = 7;
	int32 targetHealth = 8;
	bool allowAtk = 9;
	int32 uid = 10;
	repeated int32 dices = 11;
}

//单位死亡
message S_ENTITY_DEAD{
	int32 cmd = 1[default = 200]; 
	int32 scmd = 2[default = 10014];
	int32 blockX = 3;
	int32 blockY = 4;
	Card deadCard = 5;
}

//事件卡结束
message S_EVENT_FINISH{
	int32 cmd = 1[default = 200]; 
	int32 scmd = 2[default = 10015];
	Card card = 3;
}

//更新战场指定entity列表
message S_UPDATE_ENTITYS{
	int32 cmd = 1[default = 200]; 
	int32 scmd = 2[default = 10016];
	repeated Card entityCards = 3;
}